dist: trusty
sudo: false
language: cpp

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-6
      - git

before_install:
  # Get the tool used to upload coverage results to coveralls
  - gem install coveralls-lcov
  # Set the prefix used to install googletest, set the source
  # directory and get the source code
  - export GTEST_DIR="$PWD/extra/googletest"
  - export GTEST_SRC_DIR="$GTEST_DIR/source"
  - mkdir -p "$GTEST_DIR" "$GTEST_SRC_DIR"
  - pushd "$GTEST_SRC_DIR"
  - git clone --depth 1 https://github.com/google/googletest.git -b v1.8.x .
  - popd
  # Get boost
  - export BOOST_DIR="$PWD/extra/boost"
  - mkdir -p "$BOOST_DIR"
  - pushd "$BOOST_DIR"
  - git clone --depth 1 https://github.com/boostorg/boost.git -b boost-1.68.0 .
  - popd
  # Get LLCOV
  - export LCOV_DIR="$PWD/extra/lcov"
  - mkdir -p "$LCOV_DIR"
  - pushd "$LCOV_DIR"
  - wget https://github.com/linux-test-project/lcov/archive/v1.12.zip
  - unzip v1.12.zip
  - LCOV="$PWD/lcov-1.12/bin/lcov --gcov-tool gcov-6"
  - popd

before_script:
  # Build and install googletest
  - pushd "$GTEST_SRC_DIR"
  - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$GTEST_DIR" .
  - make -j
  - make install
  - popd

script:
  # Save some directories
  - export PROJECT_DIR="$PWD"
  - export TEST_SRC_DIR="$PROJECT_DIR/test"
  # Print some information
  - echo "Current dir is $PWD"
  - echo "GTest dir is $GTEST_DIR"
  - echo "Boost dir is $BOOST_DIR"
  # Set compiler
  - export CXX=/usr/bin/g++-6
  # Set compiler flags
  - export CXXFLAGS="-I$PROJECT_DIR/.."
  - export CXXFLAGS="$CXXFLAGS -I$GTEST_DIR/include"
  # Set linker flags
  - export LDFLAGS="-lgtest_main -lgtest -lpthread -L$GTEST_PATH/lib"
  # Set coverage flags
  - export COVFLAGS="--coverage"
  # Create the build directory
  - mkdir -p build && pushd build
  # Build and run each test
  - |
    for test in "$TEST_SRC_DIR"/* ; do
      test_dir="$(basename $test)"
      mkdir -p "$test_dir" && pushd "$test_dir"
      $CXX $CXXFLAGS $test -o test $LDFLAGS $COVFLAGS
      ./test
      ls -l
      popd
  - popd
  